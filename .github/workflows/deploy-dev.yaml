name: Deploy to Dev Cluster

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'latest'

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'


  cloud_login:
    runs-on: ubuntu-latest

    steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Authenticate with DigitalOcean
      run: |
        doctl auth init -t ${{ secrets.DO_API_TOKEN }}
        doctl kubernetes cluster kubeconfig save ${{ secrets.DO_CLUSTER_CREDENTIALS_DEV }}


  deploy:
    runs-on: ubuntu-latest
    needs: [setup, cloud_login]

    env:
      DOCKERHUB_NAMESPACE: samjsui
      SERVICES: |
        overhang-backend-gateway
        overhang-backend-discovery
        overhang-backend-auth
        overhang-backend-config

    steps:
    - name: Determine Kubernetes namespace name
      id: determine_namespace
      run: echo "K8S_NAMESPACE=${{ github.actor_id }}" >> $GITHUB_ENV

    - name: Check if namespace exists on the cluster
      id: check_namespace
      env:
        K8S_NAMESPACE: ${{ env.K8S_NAMESPACE }}
      run: |
        if kubectl get namespace $K8S_NAMESPACE; then
          echo "Namespace $K8S_NAMESPACE already exists."
          echo "K8S_NAMESPACE_EXISTS=true" >> $GITHUB_ENV
        else
          echo "Creating namespace $K8S_NAMESPACE."
          kubectl create namespace $K8S_NAMESPACE
          echo "K8S_NAMESPACE_EXISTS=false" >> $GITHUB_ENV
        fi

    - name: Deploy all services with Helm
      env:
        K8S_NAMESPACE: ${{ env.K8S_NAMESPACE }}
        DOCKERHUB_NAMESPACE: ${{ env.DOCKERHUB_NAMESPACE }}
      run: |
        for SERVICE in $SERVICES; do
          helm upgrade --install $SERVICE ./helm/$SERVICE \
            --set image.repository=$DOCKERHUB_NAMESPACE/$SERVICE \
            --set image.tag=latest \
            --namespace $K8S_NAMESPACE
        done

    - name: Verify deployments
      run: |
        kubectl get pods -n $K8S_NAMESPACE
